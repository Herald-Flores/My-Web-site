{"version":3,"sources":["imports.js","functions.js"],"names":[],"mappingspLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["// Import jQuery\r\nglobal.jQuery = require('jquery');\r\nvar $ = global.jQuery;\r\nwindow.$ = $;\r\n\r\n// Import libraries\r\nvar bootstrap = require('bootstrap');\r\nrequire('paroller.js');\r\nimport WOW from 'wow.js';\r\nimport Swiper from 'swiper';  \r\nlet owl_carousel = require('owl.carousel');\r\nwindow.fn = owl_carousel;\r\n\r\nconst ScrollReveal = require('scrollreveal')\r\n\r\n// FALSE in production.\r\nconst debug = true;\r\n\r\n// Console log functions\r\nfunction log(message) {\r\n    if (debug) { \r\n        console.info(message);\r\n    }\r\n}\r\nfunction table(message) {\r\n    if (debug) { \r\n        console.table(message);\r\n    }\r\n}\r\nfunction warn(message) {\r\n    if (debug) { \r\n        console.warn(message);\r\n    }\r\n}\r\nfunction error(message) {\r\n    if (debug) { \r\n        console.error(message);\r\n    }\r\n}\r\n\r\n$('.navbar-toggler').click(function () {\r\n    $(this).toggleClass('active');\r\n    $('.collapse').toggleClass('show');\r\n    $('html, body').toggleClass('not-scroll');\r\n\r\n    var btns = header.getElementsByClassName(\"nav-item\");\r\n        for (var i = 0; i < btns.length; i++) {\r\n            btns[i].addEventListener(\"click\", function() {\r\n            $('html, body').removeClass('not-scroll');\r\n            $('.collapse').removeClass('show');\r\n        });\r\n    }\r\n});\r\n\r\nvar header = document.getElementById(\"navbarNavDropdown\");\r\nvar btns = header.getElementsByClassName(\"nav-item\");\r\nfor (var i = 0; i < btns.length; i++) {\r\n        btns[i].addEventListener(\"click\", function() {\r\n        var current = document.getElementsByClassName(\"active\");\r\n        current[0].className = current[0].className.replace(\" active\", \"\");\r\n        this.className += \" active\";\r\n    });\r\n}\r\n\r\n\r\n\r\n//Scoll Reveal & CountUp\r\nlet srDelay = 200;\r\nlet srDuration = 2000;\r\nScrollReveal().reveal('.sreveal-3ms', {\r\n    origin: 'bottom',\r\n    distance: '10px',\r\n    delay: 300,\r\n    duration: srDuration,\r\n    ease: 'ease',\r\n    viewFactor: .1,\r\n    mobile: false,\r\n    //reset: true\r\n})\r\n\r\nlet srDelay1s = 200;\r\nlet srDuration1s = 2000;\r\nScrollReveal().reveal('.sreveal-1s', {\r\n    origin: 'bottom',\r\n    distance: '15px',\r\n    delay: 1000,\r\n    duration: srDuration,\r\n    ease: 'ease',\r\n    viewFactor: .1,\r\n    mobile: false,\r\n    //reset: true\r\n})\r\n/*\r\n* From Left to right\r\n*/\r\nScrollReveal().reveal('.sreveal-lr', {\r\n    origin: 'left',\r\n    distance: '15px',\r\n    delay: srDelay,\r\n    duration: srDuration,\r\n    ease: 'ease',\r\n    viewFactor: .1,\r\n    mobile: false,\r\n    //reset: true\r\n})\r\n/*\r\n* From Left to right\r\n*/\r\nScrollReveal().reveal('.sreveal-rl', {\r\n    origin: 'right',\r\n    distance: '15px',\r\n    delay: srDelay,\r\n    duration: srDuration,\r\n    ease: 'ease',\r\n    viewFactor: .1,\r\n    mobile: false,\r\n    //reset: true\r\n})\r\nScrollReveal().reveal('.sreveal-hero', {\r\n    origin: 'bottom',\r\n    distance: '70px',\r\n    delay: srDelay,\r\n    duration: srDuration,\r\n    ease: 'ease',\r\n    mobile: true,\r\n    reset: true\r\n})\r\n\r\n\r\n//Check if browser is IE\r\nvar ie= \"\";\r\nif (navigator.userAgent.search(\"MSIE\") >= 0) {\r\n    ie =\"IE11\";\r\n}\r\nvar timescroll;\r\n\r\n$('a[href*=\"#\"]')\r\n    .not('[href=\"#\"]')\r\n    .not('[href=\"#0\"]')\r\n    .click(function(event) {\r\n        if(!$(this).hasClass('no-animate')){\r\n            if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\r\n        var target = $(this.hash);\r\n        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\r\n        if (target.length) {\r\n            event.preventDefault();\r\n                if(ie === \"IE11\"){\r\n                    timescroll= 1800;\r\n                }else{\r\n                    timescroll= 1300;\r\n                }\r\n                $('html, body').animate({\r\n                    scrollTop: target.offset().top-50\r\n                }, timescroll, function() {\r\n                var $target = $(target);\r\n                $target.focus();\r\n                if ($target.is(\":focus\")) {\r\n                    return false;\r\n                } else {\r\n                    $target.attr('tabindex','-1'); \r\n                    $target.focus(); \r\n                };\r\n            });\r\n        }\r\n            }\r\n        }\r\n});\r\n\r\n// World countries array \r\n// { name, topLevelDomain, alpha2Code, alpha3Code, callingCodes, capital, altSpellings, region, subregion\r\n// population, latlng, demonym, area, gini, timezones, borders, nativeName, numericCode, currencies, languages\r\n// translations, flag, regionalBlocs, cioc }\r\n// const countries = new Request('assets/data/countries-full.json');\r\n// fetch(countries)\r\n//     .then(response => response.json())\r\n//     .then(data => {\r\n//         //table(data)\r\n//         for (const country of data) {\r\n//             //log(country.name)\r\n//         }\r\n//     }).catch(err => error(err));","var breakpoint;\r\n\r\n// Get the current breakpoint\r\nvar getBreakpoint = function () {\r\n\treturn window.getComputedStyle(document.body, ':before').content.replace(/\\\"/g, '');\r\n};\r\n\r\n// Calculate breakpoint on page load\r\nbreakpoint = getBreakpoint();\r\n\r\n// Recalculate breakpoint on resize\r\nwindow.addEventListener('resize', function () {\r\n\tbreakpoint = getBreakpoint();\r\n\t// log(breakpoint);\r\n}, false);\r\n\r\nif (breakpoint === 'lg' || breakpoint === 'xl') {\r\n\tlog('lg, xl');\r\n} else {\r\n    log('sm , md');\r\n}\r\n\r\nvar btn = $('#backtop');\r\n\r\n$(window).scroll(function() {\r\n\tif ($(window).scrollTop() > 300) {\r\n\t\tbtn.addClass('show');\r\n\t} else {\r\n\t\tbtn.removeClass('show');\r\n\t}\r\n});\r\n\r\nbtn.on('click', function(e) {\r\n\te.preventDefault();\r\n\t$('html, body').animate({scrollTop:0}, '300');\r\n});"]}